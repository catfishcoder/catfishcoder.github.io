<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43; on zyanjun</title>
    <link>https://catfishcoder.github.io/tags/c&#43;&#43;/</link>
    <description>Recent content in C&#43;&#43; on zyanjun</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 10 Jan 2022 14:23:44 +0800</lastBuildDate><atom:link href="https://catfishcoder.github.io/tags/c++/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cpp_day7</title>
      <link>https://catfishcoder.github.io/post/cpp_day7/</link>
      <pubDate>Mon, 10 Jan 2022 14:23:44 +0800</pubDate>
      
      <guid>https://catfishcoder.github.io/post/cpp_day7/</guid>
      <description>5 语句 5.1 简单语句 语句顺序执行,且以分号结尾.关键在于使用控制流语句以支持复杂的执行路径 空语句:当在程序中,语法上需要一条语句,逻辑上不需要,此时就应该使用空语句,一般情况是,当循环的全部工作在条件部分</description>
    </item>
    
    <item>
      <title>Cpp_day5</title>
      <link>https://catfishcoder.github.io/post/cpp_day5/</link>
      <pubDate>Wed, 05 Jan 2022 17:23:38 +0800</pubDate>
      
      <guid>https://catfishcoder.github.io/post/cpp_day5/</guid>
      <description>3.5 数组 数组也是存放类型相同的对象的容器，‘’/ 87这些对象本身没有名字，而是要通过其位置访问，但是与vector不同，数组大小固定。 3.5.1 定义一个数组 int arr[10]; //定义一个整型数组，包含10个元素 int *parr[10]; //定义一</description>
    </item>
    
    <item>
      <title>Cpp_day4</title>
      <link>https://catfishcoder.github.io/post/cpp_day4/</link>
      <pubDate>Tue, 04 Jan 2022 16:03:50 +0800</pubDate>
      
      <guid>https://catfishcoder.github.io/post/cpp_day4/</guid>
      <description>3.4 迭代器 除了下标之外，访问容器成员的另一种方法 除了vector之外，标准库还定义了其他几种容器，所有的容器都可以使用迭代器，但只有少数几种同时支持下标运算符。 严格来说string不属于容器，但是其支持</description>
    </item>
    
    <item>
      <title>C&#43;&#43;_day2</title>
      <link>https://catfishcoder.github.io/post/cpp_day2/</link>
      <pubDate>Tue, 28 Dec 2021 12:09:53 +0800</pubDate>
      
      <guid>https://catfishcoder.github.io/post/cpp_day2/</guid>
      <description>2. 变量和基本类型 2.1 基本内置类型 C++本身定义了一套算数类型和空类型(void),算数类型包括字符、整型、布尔值和浮点数，空类型不对应具体的值 在不同的机器上算数类型的具体大小也不相同，C++只定义了最小</description>
    </item>
    
    <item>
      <title>C&#43;&#43;_day1</title>
      <link>https://catfishcoder.github.io/post/cpp_day1/</link>
      <pubDate>Thu, 23 Dec 2021 22:22:59 +0800</pubDate>
      
      <guid>https://catfishcoder.github.io/post/cpp_day1/</guid>
      <description>1.开始 1.1 一个简单的C++程序 #include&amp;lt;iostream&amp;gt;int main(){ std::cout &amp;lt;&amp;lt; &amp;#34;hello world&amp;#34; &amp;lt;&amp;lt; std::endl; return 0; } #include&amp;lt;iostream&amp;gt;：预处理命令，在程序的预处理阶段将指定的标准库复制到当前文件中； 函数：包括返回类型，函数名，形参列表</description>
    </item>
    
  </channel>
</rss>
